# Form implementation generated from reading ui file 'UI.ui'
#
# Created by: PyQt6 UI code generator 6.5.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1088, 838)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.layoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(0, 0, 1071, 781))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame = QtWidgets.QFrame(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayoutWidget = QtWidgets.QWidget(parent=self.frame)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(0, 0, 171, 771))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton_full = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_full.setObjectName("pushButton_full")
        self.verticalLayout.addWidget(self.pushButton_full)
        self.pushButton_half = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_half.setObjectName("pushButton_half")
        self.verticalLayout.addWidget(self.pushButton_half)
        self.pushButton_mult = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_mult.setObjectName("pushButton_mult")
        self.verticalLayout.addWidget(self.pushButton_mult)
        self.pushButton_select = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_select.setObjectName("pushButton_select")
        self.verticalLayout.addWidget(self.pushButton_select)
        self.pushButton_com = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_com.setObjectName("pushButton_com")
        self.verticalLayout.addWidget(self.pushButton_com)
        self.pushButton_encode = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_encode.setObjectName("pushButton_encode")
        self.verticalLayout.addWidget(self.pushButton_encode)
        self.pushButton_decode = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_decode.setObjectName("pushButton_decode")
        self.verticalLayout.addWidget(self.pushButton_decode)
        self.pushButton_select4 = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_select4.setObjectName("pushButton_select4")
        self.verticalLayout.addWidget(self.pushButton_select4)
        self.pushButton_old = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_old.setObjectName("pushButton_old")
        self.verticalLayout.addWidget(self.pushButton_old)
        self.pushButton_content = QtWidgets.QPushButton(parent=self.verticalLayoutWidget)
        self.pushButton_content.setObjectName("pushButton_content")
        self.verticalLayout.addWidget(self.pushButton_content)
        self.horizontalLayout.addWidget(self.frame)
        self.frame_2 = QtWidgets.QFrame(parent=self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(5)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame_2.setObjectName("frame_2")
        self.stackedWidget = QtWidgets.QStackedWidget(parent=self.frame_2)
        self.stackedWidget.setGeometry(QtCore.QRect(20, 10, 851, 751))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stackedWidget.sizePolicy().hasHeightForWidth())
        self.stackedWidget.setSizePolicy(sizePolicy)
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.label = QtWidgets.QLabel(parent=self.page)
        self.label.setGeometry(QtCore.QRect(0, 0, 151, 71))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(parent=self.page)
        self.pushButton.setGeometry(QtCore.QRect(150, 650, 80, 25))
        self.pushButton.setObjectName("pushButton")
        self.spinBox = QtWidgets.QSpinBox(parent=self.page)
        self.spinBox.setGeometry(QtCore.QRect(120, 590, 42, 26))
        self.spinBox.setObjectName("spinBox")
        self.spinBox_2 = QtWidgets.QSpinBox(parent=self.page)
        self.spinBox_2.setGeometry(QtCore.QRect(220, 590, 42, 26))
        self.spinBox_2.setObjectName("spinBox_2")
        self.label_11 = QtWidgets.QLabel(parent=self.page)
        self.label_11.setGeometry(QtCore.QRect(120, 560, 54, 17))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(parent=self.page)
        self.label_12.setGeometry(QtCore.QRect(220, 560, 54, 17))
        self.label_12.setObjectName("label_12")
        self.textBrowser = QtWidgets.QTextBrowser(parent=self.page)
        self.textBrowser.setGeometry(QtCore.QRect(0, 70, 851, 61))
        self.textBrowser.setObjectName("textBrowser")
        self.svg_full_add = QtWidgets.QLabel(parent=self.page)
        self.svg_full_add.setGeometry(QtCore.QRect(180, 220, 411, 251))
        self.svg_full_add.setText("")
        self.svg_full_add.setPixmap(QtGui.QPixmap("imgs/Full-adder_logic_diagram.svg"))
        self.svg_full_add.setObjectName("svg_full_add")
        self.label_13 = QtWidgets.QLabel(parent=self.page)
        self.label_13.setGeometry(QtCore.QRect(510, 560, 54, 17))
        self.label_13.setObjectName("label_13")
        self.table_full_add = QtWidgets.QTableWidget(parent=self.page)
        self.table_full_add.setGeometry(QtCore.QRect(620, 460, 111, 281))
        self.table_full_add.setRowCount(8)
        self.table_full_add.setColumnCount(1)
        self.table_full_add.setObjectName("table_full_add")
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add.setVerticalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add.setVerticalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add.setVerticalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add.setVerticalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add.setVerticalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add.setVerticalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add.setHorizontalHeaderItem(0, item)
        self.stackedWidget.addWidget(self.page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.label_2 = QtWidgets.QLabel(parent=self.page_2)
        self.label_2.setGeometry(QtCore.QRect(0, 0, 151, 71))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.textBrowser_2 = QtWidgets.QTextBrowser(parent=self.page_2)
        self.textBrowser_2.setGeometry(QtCore.QRect(0, 70, 841, 51))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.label_27 = QtWidgets.QLabel(parent=self.page_2)
        self.label_27.setGeometry(QtCore.QRect(100, 520, 54, 17))
        self.label_27.setObjectName("label_27")
        self.label_28 = QtWidgets.QLabel(parent=self.page_2)
        self.label_28.setGeometry(QtCore.QRect(200, 520, 54, 17))
        self.label_28.setObjectName("label_28")
        self.spinBox_5 = QtWidgets.QSpinBox(parent=self.page_2)
        self.spinBox_5.setGeometry(QtCore.QRect(100, 550, 42, 26))
        self.spinBox_5.setObjectName("spinBox_5")
        self.label_29 = QtWidgets.QLabel(parent=self.page_2)
        self.label_29.setGeometry(QtCore.QRect(490, 570, 54, 17))
        self.label_29.setObjectName("label_29")
        self.table_full_add_3 = QtWidgets.QTableWidget(parent=self.page_2)
        self.table_full_add_3.setGeometry(QtCore.QRect(550, 530, 111, 91))
        self.table_full_add_3.setRowCount(2)
        self.table_full_add_3.setColumnCount(1)
        self.table_full_add_3.setObjectName("table_full_add_3")
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add_3.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add_3.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add_3.setHorizontalHeaderItem(0, item)
        self.pushButton_3 = QtWidgets.QPushButton(parent=self.page_2)
        self.pushButton_3.setGeometry(QtCore.QRect(130, 610, 80, 25))
        self.pushButton_3.setObjectName("pushButton_3")
        self.spinBox_6 = QtWidgets.QSpinBox(parent=self.page_2)
        self.spinBox_6.setGeometry(QtCore.QRect(200, 550, 42, 26))
        self.spinBox_6.setObjectName("spinBox_6")
        self.label_15 = QtWidgets.QLabel(parent=self.page_2)
        self.label_15.setGeometry(QtCore.QRect(280, 220, 261, 221))
        self.label_15.setText("")
        self.label_15.setPixmap(QtGui.QPixmap("imgs/Half_Adder.svg"))
        self.label_15.setObjectName("label_15")
        self.stackedWidget.addWidget(self.page_2)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.label_3 = QtWidgets.QLabel(parent=self.page_3)
        self.label_3.setGeometry(QtCore.QRect(0, 0, 241, 81))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.textBrowser_3 = QtWidgets.QTextBrowser(parent=self.page_3)
        self.textBrowser_3.setGeometry(QtCore.QRect(0, 80, 851, 81))
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.label_30 = QtWidgets.QLabel(parent=self.page_3)
        self.label_30.setGeometry(QtCore.QRect(100, 560, 54, 17))
        self.label_30.setObjectName("label_30")
        self.label_31 = QtWidgets.QLabel(parent=self.page_3)
        self.label_31.setGeometry(QtCore.QRect(200, 560, 54, 17))
        self.label_31.setObjectName("label_31")
        self.spinBox_7 = QtWidgets.QSpinBox(parent=self.page_3)
        self.spinBox_7.setGeometry(QtCore.QRect(100, 590, 42, 26))
        self.spinBox_7.setObjectName("spinBox_7")
        self.label_32 = QtWidgets.QLabel(parent=self.page_3)
        self.label_32.setGeometry(QtCore.QRect(480, 580, 54, 17))
        self.label_32.setObjectName("label_32")
        self.table_full_add_4 = QtWidgets.QTableWidget(parent=self.page_3)
        self.table_full_add_4.setGeometry(QtCore.QRect(550, 560, 121, 61))
        self.table_full_add_4.setRowCount(1)
        self.table_full_add_4.setColumnCount(1)
        self.table_full_add_4.setObjectName("table_full_add_4")
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add_4.setHorizontalHeaderItem(0, item)
        self.pushButton_4 = QtWidgets.QPushButton(parent=self.page_3)
        self.pushButton_4.setGeometry(QtCore.QRect(180, 650, 80, 25))
        self.pushButton_4.setObjectName("pushButton_4")
        self.spinBox_8 = QtWidgets.QSpinBox(parent=self.page_3)
        self.spinBox_8.setGeometry(QtCore.QRect(200, 590, 42, 26))
        self.spinBox_8.setObjectName("spinBox_8")
        self.label_88 = QtWidgets.QLabel(parent=self.page_3)
        self.label_88.setGeometry(QtCore.QRect(290, 560, 54, 17))
        self.label_88.setObjectName("label_88")
        self.spinBox_39 = QtWidgets.QSpinBox(parent=self.page_3)
        self.spinBox_39.setGeometry(QtCore.QRect(290, 590, 42, 26))
        self.spinBox_39.setObjectName("spinBox_39")
        self.label_17 = QtWidgets.QLabel(parent=self.page_3)
        self.label_17.setGeometry(QtCore.QRect(210, 240, 401, 231))
        self.label_17.setText("")
        self.label_17.setPixmap(QtGui.QPixmap("imgs/3-variable majority arbiter"))
        self.label_17.setObjectName("label_17")
        self.stackedWidget.addWidget(self.page_3)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.label_4 = QtWidgets.QLabel(parent=self.page_4)
        self.label_4.setGeometry(QtCore.QRect(0, 0, 391, 71))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.textBrowser_4 = QtWidgets.QTextBrowser(parent=self.page_4)
        self.textBrowser_4.setGeometry(QtCore.QRect(0, 70, 851, 111))
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.label_33 = QtWidgets.QLabel(parent=self.page_4)
        self.label_33.setGeometry(QtCore.QRect(90, 550, 54, 17))
        self.label_33.setObjectName("label_33")
        self.label_34 = QtWidgets.QLabel(parent=self.page_4)
        self.label_34.setGeometry(QtCore.QRect(190, 550, 54, 17))
        self.label_34.setObjectName("label_34")
        self.spinBox_9 = QtWidgets.QSpinBox(parent=self.page_4)
        self.spinBox_9.setGeometry(QtCore.QRect(90, 580, 42, 26))
        self.spinBox_9.setObjectName("spinBox_9")
        self.label_35 = QtWidgets.QLabel(parent=self.page_4)
        self.label_35.setGeometry(QtCore.QRect(500, 580, 54, 17))
        self.label_35.setObjectName("label_35")
        self.table_full_add_5 = QtWidgets.QTableWidget(parent=self.page_4)
        self.table_full_add_5.setGeometry(QtCore.QRect(570, 550, 111, 61))
        self.table_full_add_5.setRowCount(1)
        self.table_full_add_5.setColumnCount(1)
        self.table_full_add_5.setObjectName("table_full_add_5")
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add_5.setHorizontalHeaderItem(0, item)
        self.pushButton_5 = QtWidgets.QPushButton(parent=self.page_4)
        self.pushButton_5.setGeometry(QtCore.QRect(220, 640, 80, 25))
        self.pushButton_5.setObjectName("pushButton_5")
        self.spinBox_10 = QtWidgets.QSpinBox(parent=self.page_4)
        self.spinBox_10.setGeometry(QtCore.QRect(190, 580, 42, 26))
        self.spinBox_10.setObjectName("spinBox_10")
        self.spinBox_59 = QtWidgets.QSpinBox(parent=self.page_4)
        self.spinBox_59.setGeometry(QtCore.QRect(270, 580, 42, 26))
        self.spinBox_59.setObjectName("spinBox_59")
        self.label_127 = QtWidgets.QLabel(parent=self.page_4)
        self.label_127.setGeometry(QtCore.QRect(370, 550, 54, 17))
        self.label_127.setObjectName("label_127")
        self.label_128 = QtWidgets.QLabel(parent=self.page_4)
        self.label_128.setGeometry(QtCore.QRect(270, 550, 54, 17))
        self.label_128.setObjectName("label_128")
        self.spinBox_60 = QtWidgets.QSpinBox(parent=self.page_4)
        self.spinBox_60.setGeometry(QtCore.QRect(370, 580, 42, 26))
        self.spinBox_60.setObjectName("spinBox_60")
        self.label_18 = QtWidgets.QLabel(parent=self.page_4)
        self.label_18.setGeometry(QtCore.QRect(200, 220, 391, 291))
        self.label_18.setText("")
        self.label_18.setPixmap(QtGui.QPixmap("imgs/4 variable priority majority arbiter"))
        self.label_18.setObjectName("label_18")
        self.stackedWidget.addWidget(self.page_4)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.label_5 = QtWidgets.QLabel(parent=self.page_5)
        self.label_5.setGeometry(QtCore.QRect(0, 0, 221, 81))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.textBrowser_5 = QtWidgets.QTextBrowser(parent=self.page_5)
        self.textBrowser_5.setGeometry(QtCore.QRect(0, 70, 851, 161))
        self.textBrowser_5.setObjectName("textBrowser_5")
        self.label_36 = QtWidgets.QLabel(parent=self.page_5)
        self.label_36.setGeometry(QtCore.QRect(90, 550, 54, 17))
        self.label_36.setObjectName("label_36")
        self.label_37 = QtWidgets.QLabel(parent=self.page_5)
        self.label_37.setGeometry(QtCore.QRect(190, 550, 54, 17))
        self.label_37.setObjectName("label_37")
        self.spinBox_11 = QtWidgets.QSpinBox(parent=self.page_5)
        self.spinBox_11.setGeometry(QtCore.QRect(90, 580, 42, 26))
        self.spinBox_11.setObjectName("spinBox_11")
        self.label_38 = QtWidgets.QLabel(parent=self.page_5)
        self.label_38.setGeometry(QtCore.QRect(460, 580, 54, 17))
        self.label_38.setObjectName("label_38")
        self.table_full_add_6 = QtWidgets.QTableWidget(parent=self.page_5)
        self.table_full_add_6.setGeometry(QtCore.QRect(530, 550, 111, 61))
        self.table_full_add_6.setRowCount(1)
        self.table_full_add_6.setColumnCount(1)
        self.table_full_add_6.setObjectName("table_full_add_6")
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add_6.setHorizontalHeaderItem(0, item)
        self.pushButton_6 = QtWidgets.QPushButton(parent=self.page_5)
        self.pushButton_6.setGeometry(QtCore.QRect(120, 640, 80, 25))
        self.pushButton_6.setObjectName("pushButton_6")
        self.spinBox_12 = QtWidgets.QSpinBox(parent=self.page_5)
        self.spinBox_12.setGeometry(QtCore.QRect(190, 580, 42, 26))
        self.spinBox_12.setObjectName("spinBox_12")
        self.label_19 = QtWidgets.QLabel(parent=self.page_5)
        self.label_19.setGeometry(QtCore.QRect(240, 240, 311, 291))
        self.label_19.setText("")
        self.label_19.setPixmap(QtGui.QPixmap("imgs/1-bit binary comparator.png"))
        self.label_19.setObjectName("label_19")
        self.stackedWidget.addWidget(self.page_5)
        self.page_6 = QtWidgets.QWidget()
        self.page_6.setObjectName("page_6")
        self.label_6 = QtWidgets.QLabel(parent=self.page_6)
        self.label_6.setGeometry(QtCore.QRect(0, 0, 221, 81))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.textBrowser_6 = QtWidgets.QTextBrowser(parent=self.page_6)
        self.textBrowser_6.setGeometry(QtCore.QRect(0, 80, 841, 81))
        self.textBrowser_6.setObjectName("textBrowser_6")
        self.label_39 = QtWidgets.QLabel(parent=self.page_6)
        self.label_39.setGeometry(QtCore.QRect(100, 550, 54, 17))
        self.label_39.setObjectName("label_39")
        self.label_40 = QtWidgets.QLabel(parent=self.page_6)
        self.label_40.setGeometry(QtCore.QRect(200, 550, 54, 17))
        self.label_40.setObjectName("label_40")
        self.spinBox_13 = QtWidgets.QSpinBox(parent=self.page_6)
        self.spinBox_13.setGeometry(QtCore.QRect(100, 580, 42, 26))
        self.spinBox_13.setObjectName("spinBox_13")
        self.label_41 = QtWidgets.QLabel(parent=self.page_6)
        self.label_41.setGeometry(QtCore.QRect(500, 600, 54, 17))
        self.label_41.setObjectName("label_41")
        self.table_full_add_7 = QtWidgets.QTableWidget(parent=self.page_6)
        self.table_full_add_7.setGeometry(QtCore.QRect(560, 550, 111, 91))
        self.table_full_add_7.setRowCount(2)
        self.table_full_add_7.setColumnCount(1)
        self.table_full_add_7.setObjectName("table_full_add_7")
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add_7.setHorizontalHeaderItem(0, item)
        self.pushButton_7 = QtWidgets.QPushButton(parent=self.page_6)
        self.pushButton_7.setGeometry(QtCore.QRect(220, 650, 80, 25))
        self.pushButton_7.setObjectName("pushButton_7")
        self.spinBox_14 = QtWidgets.QSpinBox(parent=self.page_6)
        self.spinBox_14.setGeometry(QtCore.QRect(200, 580, 42, 26))
        self.spinBox_14.setObjectName("spinBox_14")
        self.label_129 = QtWidgets.QLabel(parent=self.page_6)
        self.label_129.setGeometry(QtCore.QRect(370, 550, 54, 17))
        self.label_129.setObjectName("label_129")
        self.spinBox_61 = QtWidgets.QSpinBox(parent=self.page_6)
        self.spinBox_61.setGeometry(QtCore.QRect(370, 580, 42, 26))
        self.spinBox_61.setObjectName("spinBox_61")
        self.label_130 = QtWidgets.QLabel(parent=self.page_6)
        self.label_130.setGeometry(QtCore.QRect(290, 550, 54, 17))
        self.label_130.setObjectName("label_130")
        self.spinBox_62 = QtWidgets.QSpinBox(parent=self.page_6)
        self.spinBox_62.setGeometry(QtCore.QRect(290, 580, 42, 26))
        self.spinBox_62.setObjectName("spinBox_62")
        self.label_21 = QtWidgets.QLabel(parent=self.page_6)
        self.label_21.setGeometry(QtCore.QRect(150, 230, 511, 221))
        self.label_21.setText("")
        self.label_21.setPixmap(QtGui.QPixmap("imgs/Encoder_diagram.svg"))
        self.label_21.setObjectName("label_21")
        self.stackedWidget.addWidget(self.page_6)
        self.page_7 = QtWidgets.QWidget()
        self.page_7.setObjectName("page_7")
        self.label_7 = QtWidgets.QLabel(parent=self.page_7)
        self.label_7.setGeometry(QtCore.QRect(0, 0, 221, 81))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.textBrowser_7 = QtWidgets.QTextBrowser(parent=self.page_7)
        self.textBrowser_7.setGeometry(QtCore.QRect(0, 80, 841, 81))
        self.textBrowser_7.setObjectName("textBrowser_7")
        self.label_42 = QtWidgets.QLabel(parent=self.page_7)
        self.label_42.setGeometry(QtCore.QRect(110, 540, 54, 17))
        self.label_42.setObjectName("label_42")
        self.label_43 = QtWidgets.QLabel(parent=self.page_7)
        self.label_43.setGeometry(QtCore.QRect(210, 540, 54, 17))
        self.label_43.setObjectName("label_43")
        self.spinBox_15 = QtWidgets.QSpinBox(parent=self.page_7)
        self.spinBox_15.setGeometry(QtCore.QRect(110, 570, 42, 26))
        self.spinBox_15.setObjectName("spinBox_15")
        self.label_44 = QtWidgets.QLabel(parent=self.page_7)
        self.label_44.setGeometry(QtCore.QRect(520, 580, 54, 17))
        self.label_44.setObjectName("label_44")
        self.table_full_add_8 = QtWidgets.QTableWidget(parent=self.page_7)
        self.table_full_add_8.setGeometry(QtCore.QRect(590, 510, 111, 151))
        self.table_full_add_8.setRowCount(4)
        self.table_full_add_8.setColumnCount(1)
        self.table_full_add_8.setObjectName("table_full_add_8")
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add_8.setHorizontalHeaderItem(0, item)
        self.pushButton_8 = QtWidgets.QPushButton(parent=self.page_7)
        self.pushButton_8.setGeometry(QtCore.QRect(140, 630, 80, 25))
        self.pushButton_8.setObjectName("pushButton_8")
        self.spinBox_16 = QtWidgets.QSpinBox(parent=self.page_7)
        self.spinBox_16.setGeometry(QtCore.QRect(210, 570, 42, 26))
        self.spinBox_16.setObjectName("spinBox_16")
        self.label_16 = QtWidgets.QLabel(parent=self.page_7)
        self.label_16.setGeometry(QtCore.QRect(200, 200, 411, 281))
        self.label_16.setText("")
        self.label_16.setPixmap(QtGui.QPixmap("imgs/1_bit_Decoder_2-to-4_line.svg"))
        self.label_16.setObjectName("label_16")
        self.stackedWidget.addWidget(self.page_7)
        self.page_8 = QtWidgets.QWidget()
        self.page_8.setObjectName("page_8")
        self.label_8 = QtWidgets.QLabel(parent=self.page_8)
        self.label_8.setGeometry(QtCore.QRect(0, 0, 211, 81))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.textBrowser_8 = QtWidgets.QTextBrowser(parent=self.page_8)
        self.textBrowser_8.setGeometry(QtCore.QRect(0, 70, 851, 81))
        self.textBrowser_8.setObjectName("textBrowser_8")
        self.label_45 = QtWidgets.QLabel(parent=self.page_8)
        self.label_45.setGeometry(QtCore.QRect(70, 560, 54, 17))
        self.label_45.setObjectName("label_45")
        self.label_46 = QtWidgets.QLabel(parent=self.page_8)
        self.label_46.setGeometry(QtCore.QRect(150, 560, 54, 17))
        self.label_46.setObjectName("label_46")
        self.spinBox_17 = QtWidgets.QSpinBox(parent=self.page_8)
        self.spinBox_17.setGeometry(QtCore.QRect(70, 590, 42, 26))
        self.spinBox_17.setObjectName("spinBox_17")
        self.label_47 = QtWidgets.QLabel(parent=self.page_8)
        self.label_47.setGeometry(QtCore.QRect(640, 580, 54, 17))
        self.label_47.setObjectName("label_47")
        self.table_full_add_9 = QtWidgets.QTableWidget(parent=self.page_8)
        self.table_full_add_9.setGeometry(QtCore.QRect(700, 550, 111, 61))
        self.table_full_add_9.setRowCount(1)
        self.table_full_add_9.setColumnCount(1)
        self.table_full_add_9.setObjectName("table_full_add_9")
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add_9.setHorizontalHeaderItem(0, item)
        self.pushButton_9 = QtWidgets.QPushButton(parent=self.page_8)
        self.pushButton_9.setGeometry(QtCore.QRect(250, 650, 80, 25))
        self.pushButton_9.setObjectName("pushButton_9")
        self.spinBox_18 = QtWidgets.QSpinBox(parent=self.page_8)
        self.spinBox_18.setGeometry(QtCore.QRect(150, 590, 42, 26))
        self.spinBox_18.setObjectName("spinBox_18")
        self.label_131 = QtWidgets.QLabel(parent=self.page_8)
        self.label_131.setGeometry(QtCore.QRect(300, 560, 54, 17))
        self.label_131.setObjectName("label_131")
        self.spinBox_63 = QtWidgets.QSpinBox(parent=self.page_8)
        self.spinBox_63.setGeometry(QtCore.QRect(230, 590, 42, 26))
        self.spinBox_63.setObjectName("spinBox_63")
        self.spinBox_64 = QtWidgets.QSpinBox(parent=self.page_8)
        self.spinBox_64.setGeometry(QtCore.QRect(310, 590, 42, 26))
        self.spinBox_64.setObjectName("spinBox_64")
        self.label_132 = QtWidgets.QLabel(parent=self.page_8)
        self.label_132.setGeometry(QtCore.QRect(230, 560, 54, 17))
        self.label_132.setObjectName("label_132")
        self.label_179 = QtWidgets.QLabel(parent=self.page_8)
        self.label_179.setGeometry(QtCore.QRect(440, 560, 54, 17))
        self.label_179.setObjectName("label_179")
        self.label_180 = QtWidgets.QLabel(parent=self.page_8)
        self.label_180.setGeometry(QtCore.QRect(530, 560, 54, 17))
        self.label_180.setObjectName("label_180")
        self.spinBox_92 = QtWidgets.QSpinBox(parent=self.page_8)
        self.spinBox_92.setGeometry(QtCore.QRect(430, 590, 42, 26))
        self.spinBox_92.setObjectName("spinBox_92")
        self.spinBox_93 = QtWidgets.QSpinBox(parent=self.page_8)
        self.spinBox_93.setGeometry(QtCore.QRect(530, 590, 42, 26))
        self.spinBox_93.setObjectName("spinBox_93")
        self.label_20 = QtWidgets.QLabel(parent=self.page_8)
        self.label_20.setGeometry(QtCore.QRect(270, 160, 241, 391))
        self.label_20.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.label_20.setText("")
        self.label_20.setPixmap(QtGui.QPixmap("imgs/Mux_from_3_state_buffers.png"))
        self.label_20.setObjectName("label_20")
        self.stackedWidget.addWidget(self.page_8)
        self.page_9 = QtWidgets.QWidget()
        self.page_9.setObjectName("page_9")
        self.label_9 = QtWidgets.QLabel(parent=self.page_9)
        self.label_9.setGeometry(QtCore.QRect(0, 0, 321, 101))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.textBrowser_9 = QtWidgets.QTextBrowser(parent=self.page_9)
        self.textBrowser_9.setGeometry(QtCore.QRect(10, 90, 831, 161))
        self.textBrowser_9.setObjectName("textBrowser_9")
        self.label_48 = QtWidgets.QLabel(parent=self.page_9)
        self.label_48.setGeometry(QtCore.QRect(110, 560, 54, 17))
        self.label_48.setObjectName("label_48")
        self.label_49 = QtWidgets.QLabel(parent=self.page_9)
        self.label_49.setGeometry(QtCore.QRect(210, 560, 54, 17))
        self.label_49.setObjectName("label_49")
        self.spinBox_19 = QtWidgets.QSpinBox(parent=self.page_9)
        self.spinBox_19.setGeometry(QtCore.QRect(110, 590, 42, 26))
        self.spinBox_19.setObjectName("spinBox_19")
        self.label_50 = QtWidgets.QLabel(parent=self.page_9)
        self.label_50.setGeometry(QtCore.QRect(510, 590, 54, 17))
        self.label_50.setObjectName("label_50")
        self.table_full_add_10 = QtWidgets.QTableWidget(parent=self.page_9)
        self.table_full_add_10.setGeometry(QtCore.QRect(580, 560, 111, 61))
        self.table_full_add_10.setRowCount(1)
        self.table_full_add_10.setColumnCount(1)
        self.table_full_add_10.setObjectName("table_full_add_10")
        item = QtWidgets.QTableWidgetItem()
        self.table_full_add_10.setHorizontalHeaderItem(0, item)
        self.pushButton_10 = QtWidgets.QPushButton(parent=self.page_9)
        self.pushButton_10.setGeometry(QtCore.QRect(220, 650, 80, 25))
        self.pushButton_10.setObjectName("pushButton_10")
        self.spinBox_20 = QtWidgets.QSpinBox(parent=self.page_9)
        self.spinBox_20.setGeometry(QtCore.QRect(210, 590, 42, 26))
        self.spinBox_20.setObjectName("spinBox_20")
        self.spinBox_90 = QtWidgets.QSpinBox(parent=self.page_9)
        self.spinBox_90.setGeometry(QtCore.QRect(280, 590, 42, 26))
        self.spinBox_90.setObjectName("spinBox_90")
        self.label_177 = QtWidgets.QLabel(parent=self.page_9)
        self.label_177.setGeometry(QtCore.QRect(280, 560, 54, 17))
        self.label_177.setObjectName("label_177")
        self.spinBox_91 = QtWidgets.QSpinBox(parent=self.page_9)
        self.spinBox_91.setGeometry(QtCore.QRect(380, 590, 42, 26))
        self.spinBox_91.setObjectName("spinBox_91")
        self.label_178 = QtWidgets.QLabel(parent=self.page_9)
        self.label_178.setGeometry(QtCore.QRect(380, 560, 54, 17))
        self.label_178.setObjectName("label_178")
        self.stackedWidget.addWidget(self.page_9)
        self.page_10 = QtWidgets.QWidget()
        self.page_10.setObjectName("page_10")
        self.label_10 = QtWidgets.QLabel(parent=self.page_10)
        self.label_10.setGeometry(QtCore.QRect(0, 0, 341, 61))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.pushButton_2 = QtWidgets.QPushButton(parent=self.page_10)
        self.pushButton_2.setGeometry(QtCore.QRect(140, 90, 80, 25))
        self.pushButton_2.setObjectName("pushButton_2")
        self.label_14 = QtWidgets.QLabel(parent=self.page_10)
        self.label_14.setGeometry(QtCore.QRect(30, 70, 81, 17))
        self.label_14.setObjectName("label_14")
        self.lineEdit = QtWidgets.QLineEdit(parent=self.page_10)
        self.lineEdit.setGeometry(QtCore.QRect(10, 90, 113, 25))
        self.lineEdit.setObjectName("lineEdit")
        self.textBrowser_10 = QtWidgets.QTextBrowser(parent=self.page_10)
        self.textBrowser_10.setGeometry(QtCore.QRect(0, 140, 841, 611))
        self.textBrowser_10.setObjectName("textBrowser_10")
        self.stackedWidget.addWidget(self.page_10)
        self.horizontalLayout.addWidget(self.frame_2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1088, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(9)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_full.setText(_translate("MainWindow", "全加器"))
        self.pushButton_half.setText(_translate("MainWindow", "半加器"))
        self.pushButton_mult.setText(_translate("MainWindow", "多数表决器"))
        self.pushButton_select.setText(_translate("MainWindow", "优先级多数表决器"))
        self.pushButton_com.setText(_translate("MainWindow", "1位比较器"))
        self.pushButton_encode.setText(_translate("MainWindow", "4-2编码器"))
        self.pushButton_decode.setText(_translate("MainWindow", "2-4译码器"))
        self.pushButton_select4.setText(_translate("MainWindow", "4-1选择器"))
        self.pushButton_old.setText(_translate("MainWindow", "4位奇偶校验器"))
        self.pushButton_content.setText(_translate("MainWindow", "串口设置与说明"))
        self.label.setText(_translate("MainWindow", "全加器"))
        self.pushButton.setText(_translate("MainWindow", "计算"))
        self.label_11.setText(_translate("MainWindow", "Input A:"))
        self.label_12.setText(_translate("MainWindow", "input B:"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">在数字电路中，全加器（Full Adder）是一种用于执行二进制加法运算的组合逻辑电路。它可以接受两个输入位和一个进位输入位，并产生一个输出和一个进位输出位。\\n\\n全加器的输入包括两个要相加的二进制位（通常称为A和B）以及一个进位输入位（通常称为Cin）。它的输出包括一个和位（通常称为Sum）和一个进位输出位（通常称为Cout）。</p></body></html>"))
        self.label_13.setText(_translate("MainWindow", "输出:"))
        item = self.table_full_add.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "8"))
        item = self.table_full_add.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "7"))
        item = self.table_full_add.verticalHeaderItem(2)
        item.setText(_translate("MainWindow", "6"))
        item = self.table_full_add.verticalHeaderItem(3)
        item.setText(_translate("MainWindow", "5"))
        item = self.table_full_add.verticalHeaderItem(4)
        item.setText(_translate("MainWindow", "4"))
        item = self.table_full_add.verticalHeaderItem(5)
        item.setText(_translate("MainWindow", "3"))
        item = self.table_full_add.verticalHeaderItem(6)
        item.setText(_translate("MainWindow", "2"))
        item = self.table_full_add.verticalHeaderItem(7)
        item.setText(_translate("MainWindow", "1"))
        item = self.table_full_add.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "信号"))
        self.label_2.setText(_translate("MainWindow", "半加器"))
        self.textBrowser_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">半加器（Half Adder）是一种基本的数字电路，用于执行二进制数的简单相加操作，仅能对两个单独的二进制位进行相加，并产生和位（Sum）和进位位（Carry）两个输出位。半加器的输入包括两个要相加的二进制位（通常称为A和B）。它的输出包括一个和位（Sum）和一个进位位（Carry）。</p></body></html>"))
        self.label_27.setText(_translate("MainWindow", "Input A:"))
        self.label_28.setText(_translate("MainWindow", "input B:"))
        self.label_29.setText(_translate("MainWindow", "输出:"))
        item = self.table_full_add_3.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "2"))
        item = self.table_full_add_3.verticalHeaderItem(1)
        item.setText(_translate("MainWindow", "1"))
        item = self.table_full_add_3.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "信号"))
        self.pushButton_3.setText(_translate("MainWindow", "计算"))
        self.label_3.setText(_translate("MainWindow", "多数表决器"))
        self.textBrowser_3.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">多数表决器（Majority Voter）是一种电路或算法，用于在多个输入中确定出现最多次数的信号。它基于“多数原则”，即选择出现次数最多的信号作为输出。</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">在数字电路中，多数表决器通常用于冗余系统、容错系统或通信系统中，以提高系统的可靠性。它可以用于检测和纠正传输中的错误、选择正确的数据信号或判断状态。</p></body></html>"))
        self.label_30.setText(_translate("MainWindow", "Input A:"))
        self.label_31.setText(_translate("MainWindow", "input B:"))
        self.label_32.setText(_translate("MainWindow", "输出:"))
        item = self.table_full_add_4.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "信号"))
        self.pushButton_4.setText(_translate("MainWindow", "计算"))
        self.label_88.setText(_translate("MainWindow", "Input C:"))
        self.label_4.setText(_translate("MainWindow", "优先级多数表决器"))
        self.textBrowser_4.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">优先级多数表决器（Priority Majority Voter）是一种多数表决器的变种，具有优先级或权重的概念。</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">它根据输入信号的优先级来确定输出信号。在优先级多数表决器中，每个输入信号都分配了一个优先级或权重。较高优先级的信号在多数表决中具有更高的权重。当多数表决进行时，系统会选择具有最高权重的信号作为输出。优先级多数表决器通常用于需要考虑不同信号的重要性或紧急性的系统中。</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">例如，在安全系统中，高优先级的报警信号可能需要优先处理，而低优先级的信号可以暂时忽略。</p></body></html>"))
        self.label_33.setText(_translate("MainWindow", "Input A:"))
        self.label_34.setText(_translate("MainWindow", "input B:"))
        self.label_35.setText(_translate("MainWindow", "输出:"))
        item = self.table_full_add_5.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "信号"))
        self.pushButton_5.setText(_translate("MainWindow", "计算"))
        self.label_127.setText(_translate("MainWindow", "Input D:"))
        self.label_128.setText(_translate("MainWindow", "Input C:"))
        self.label_5.setText(_translate("MainWindow", "1位比较器"))
        self.textBrowser_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">一位比较器（One-bit Comparator）是一种电路或算法，用于比较两个二进制位的大小关系。它确定两个输入位（通常称为A和B）之间的相对大小，并产生相应的比较结果。</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">一位比较器的输出通常包括三个信号：</p>\n"
"<ol style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\"\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">大于（Greater Than）：当输入位A大于输入位B时，该信号为高电平（1），否则为低电平（0）。</li>\n"
"<li style=\"\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">小于（Less Than）：当输入位A小于输入位B时，该信号为高电平（1），否则为低电平（0）。</li>\n"
"<li style=\"\" style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">等于（Equal）：当输入位A等于输入位B时，该信号为高电平（1），否则为低电平（0）。</li></ol></body></html>"))
        self.label_36.setText(_translate("MainWindow", "Input A:"))
        self.label_37.setText(_translate("MainWindow", "input B:"))
        self.label_38.setText(_translate("MainWindow", "输出:"))
        item = self.table_full_add_6.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "信号"))
        self.pushButton_6.setText(_translate("MainWindow", "计算"))
        self.label_6.setText(_translate("MainWindow", "4-2编码器"))
        self.textBrowser_6.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">4-2编码器（4-to-2 Encoder）是一种数字电路，用于将4个输入线路的不同组合映射到2个输出线路上。它可以将4个输入位的状态编码成2个输出位，其中仅有一个输出位处于高电平（1），其他输出位处于低电平（0）。</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">4-2编码器的输入有4个线路（通常称为A0、A1、A2和A3），输出有2个线路（通常称为Y0和Y1）。</p></body></html>"))
        self.label_39.setText(_translate("MainWindow", "Input A:"))
        self.label_40.setText(_translate("MainWindow", "input B:"))
        self.label_41.setText(_translate("MainWindow", "输出:"))
        item = self.table_full_add_7.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "信号"))
        self.pushButton_7.setText(_translate("MainWindow", "计算"))
        self.label_129.setText(_translate("MainWindow", "Input D:"))
        self.label_130.setText(_translate("MainWindow", "Input C:"))
        self.label_7.setText(_translate("MainWindow", "2-4译码器"))
        self.textBrowser_7.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">2-4译码器（2-to-4 Decoder）是一种数字电路，用于将2个输入线路的状态映射到4个输出线路上。它可以将2个输入位的状态译码成4个输出位，根据输入位的组合将一个输出位置高电平（1），其他输出位置低电平（0）。</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">2-4译码器的输入有2个线路（通常称为A0和A1），输出有4个线路（通常称为Y0、Y1、Y2和Y3）。</p></body></html>"))
        self.label_42.setText(_translate("MainWindow", "Input A:"))
        self.label_43.setText(_translate("MainWindow", "input B:"))
        self.label_44.setText(_translate("MainWindow", "输出:"))
        item = self.table_full_add_8.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "信号"))
        self.pushButton_8.setText(_translate("MainWindow", "计算"))
        self.label_8.setText(_translate("MainWindow", "4-1选择器"))
        self.textBrowser_8.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">4-1选择器（4-to-1 Selector）是一种数字电路，用于从四个输入信号中选择一个信号作为输出。它根据控制信号选择要传递的输入信号，并将其作为输出信号。</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">4-1选择器的输入包括四个数据输入线路（通常称为D0、D1、D2和D3）和两个控制输入线路（通常称为S0和S1）。输出为一个数据输出线路（通常称为Y）。</p></body></html>"))
        self.label_45.setText(_translate("MainWindow", "Input A:"))
        self.label_46.setText(_translate("MainWindow", "input B:"))
        self.label_47.setText(_translate("MainWindow", "输出:"))
        item = self.table_full_add_9.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "信号"))
        self.pushButton_9.setText(_translate("MainWindow", "计算"))
        self.label_131.setText(_translate("MainWindow", "input D:"))
        self.label_132.setText(_translate("MainWindow", "Input C:"))
        self.label_179.setText(_translate("MainWindow", "S0"))
        self.label_180.setText(_translate("MainWindow", "S1"))
        self.label_9.setText(_translate("MainWindow", "4位奇偶校验器"))
        self.textBrowser_9.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">4位奇偶校验器（4-bit Parity Checker）是一种数字电路或算法，用于检查给定的4位二进制数据的奇偶校验。</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">奇偶校验是一种错误检测方法，用于确定二进制数据中的位数（或字节）中是否存在奇数个高电平（1）或偶数个高电平（1）。奇偶校验器用于计算给定数据中的1的个数，并根据奇偶规则确定校验位的值。</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">在4位奇偶校验器中，输入为4个二进制位（通常称为D0、D1、D2和D3），输出为一个校验位（通常称为P）。</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">校验位的值取决于数据位中1的个数。如果数据位中1的个数为偶数个，则校验位被设置为0，表示偶校验；如果数据位中1的个数为奇数个，则校验位被设置为1，表示奇校验。</p></body></html>"))
        self.label_48.setText(_translate("MainWindow", "Input A:"))
        self.label_49.setText(_translate("MainWindow", "input B:"))
        self.label_50.setText(_translate("MainWindow", "输出:"))
        item = self.table_full_add_10.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "信号"))
        self.pushButton_10.setText(_translate("MainWindow", "计算"))
        self.label_177.setText(_translate("MainWindow", "Input C:"))
        self.label_178.setText(_translate("MainWindow", "input D:"))
        self.label_10.setText(_translate("MainWindow", "串口设置与说明"))
        self.pushButton_2.setText(_translate("MainWindow", "确认"))
        self.label_14.setText(_translate("MainWindow", "串口端口："))
        self.textBrowser_10.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<h1 style=\" margin-top:18px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:xx-large; font-weight:600;\">PyQT6 和 Arduino UNO R3 数字电路实验</span></h1>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">该仓库包含使用 PyQT6 和 Arduino UNO R3 实现的 9 个常见数字电路实验。这些实验从逻辑的角度来实现了全加器、半加器、编码器、译码器等电路。</p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">仓库地址：<a href=\"https://github.com/Elonisme/Digital-Circuit-Logic-Realization-Experiment.git\"><span style=\" text-decoration: underline; color:#0000ff;\">https://github.com/Elonisme/Digital-Circuit-Logic-Realization-Experiment.git</span></a></p>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">环境要求</span></h2>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">要运行这些实验，您需要以下环境：</p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\"\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Python 3.11</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">PyQT6 库</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Arduino UNO R3</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Arduino IDE</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">操作系统：Arch Linux</li></ul>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">安装步骤</span></h2>\n"
"<ol style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\"\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">克隆或下载本仓库的代码到您的本地环境。</li>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px;\"><span style=\" font-family:\'monospace\';\">bashCopy code</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px;\"><span style=\" font-family:\'monospace\';\">git clone https://github.com/Elonisme/Digital-Circuit-Logic-Realization-Experiment.git</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px; font-family:\'monospace\';\"><br /></p>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">在计算机上安装 Python 3.11。</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">安装 PyQT6 库。您可以使用以下命令通过 pip 安装：</li>\n"
"<p style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px;\"><span style=\" font-family:\'monospace\';\">Copy code</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px;\"><span style=\" font-family:\'monospace\';\">pip install PyQt6</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:1; text-indent:0px; font-family:\'monospace\';\"><br /></p>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">连接 Arduino UNO R3 开发板到计算机，并确保安装了 Arduino IDE。</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">打开 Arduino IDE，将对应的电路图加载到 Arduino IDE 中。</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">将 Arduino UNO R3 开发板与计算机进行连接，并上传相应的代码到开发板。</li></ol>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">串口通讯</span></h2>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">本项目使用串口进行通讯来与 Arduino UNO R3 开发板进行数据交互。默认串口端口为 <span style=\" font-family:\'monospace\';\">/dev/ttyACM0</span>。如果您的串口端口不同，您可以根据实际情况在代码中进行相应的修改。</p>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">电路图</span></h2>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">本仓库中的电路图是使用自绘图或维基百科插图制作的，它们提供了与数字电路实验相关的电路图示例。您可以在对应的实验文件夹中找到相应的电路图。</p>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">实验内容</span></h2>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">以下是本仓库中包含的实验内容：</p>\n"
"<ol style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\"\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">全加器（Full Adder）</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">半加器（Half Adder）</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">编码器（Encoder）</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">译码器（Decoder）</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">多数表决器（Majority Voter）</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">优先级多数表决器（Priority Majority Voter）</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">1 位比较器（1-Bit Comparator）</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">4-2 编码器（4-to-2 Encoder）</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">2-4 译码器（2-to-4 Decoder）</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">4-1 选择器（4-to-1 Selector）</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">4 位奇偶校验器（4-Bit Parity Checker）</li></ol>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">使用许可</span></h2>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">本软件使用 <a href=\"https://www.gnu.org/licenses/gpl-3.0.html\"><span style=\" text-decoration: underline; color:#0000ff;\">GPLv3</span></a> 协议。</p>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">贡献</span></h2>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">如果您有任何问题、建议或改进意见，欢迎贡献您的代码或提出问题。请在 GitHub 上提交 issue 或 pull request，我们将非常乐意与您合作。</p>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">鸣谢</span></h2>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">感谢您对该项目的兴趣和支持！祝您学习愉快！</p>\n"
"<h2 style=\" margin-top:16px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:x-large; font-weight:600;\">参考资料</span></h2>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">如果您对数字电路感兴趣，以下是一些有用的参考资料：</p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\"\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">《数字逻辑与计算机设计》（M. Morris Mano，Michael D. Ciletti 著）</li>\n"
"<li style=\"\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">《数字系统设计与VHDL》（斯蒂芬·布朗，托马斯·费洛维蒂 著）</li></ul></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
